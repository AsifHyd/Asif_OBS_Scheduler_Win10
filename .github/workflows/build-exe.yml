name: Build Windows EXE

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build:
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller tkinter-tooltip
    
    - name: Download FFmpeg
      run: |
        Invoke-WebRequest -Uri "https://github.com/BtbN/FFmpeg-Builds/releases/download/latest/ffmpeg-master-latest-win64-gpl.zip" -OutFile "ffmpeg.zip"
        Expand-Archive -Path "ffmpeg.zip" -DestinationPath "."
        Copy-Item "ffmpeg-master-latest-win64-gpl/bin/ffprobe.exe" -Destination "."
        
    - name: Build EXE
      run: |
        pyinstaller --onedir --windowed --add-binary "ffprobe.exe;." --name "PlaylistScheduler" scheduler_app.py
        
    - name: Create release package
      run: |
        Compress-Archive -Path "dist/PlaylistScheduler/*" -DestinationPath "PlaylistScheduler-Windows.zip"
        
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: PlaylistScheduler-Windows
        path: PlaylistScheduler-Windows.zip
        
    - name: Create Release
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v1.0-${{ github.run_number }}
        name: Playlist Scheduler v1.0-${{ github.run_number }}
        body: |
          Automated build of OBS Playlist Scheduler
          - Windows executable included
          - Extract PlaylistScheduler.exe and run
        files: PlaylistScheduler-Windows.zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
